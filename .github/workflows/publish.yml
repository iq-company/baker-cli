name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
  workflow_run:
    workflows:
      - 'Tag on version change'
    types:
      - completed

jobs:
  build-and-publish:
    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Verify tag matches project version
        run: |
          set -euo pipefail
          VERSION=$(python -c "import tomllib; f=open('pyproject.toml','rb'); print(tomllib.load(f)['project']['version'])")
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            TAG="${GITHUB_REF_NAME}"
          else
            TAG="v${VERSION}"
          fi
          if [ "${TAG#v}" != "$VERSION" ]; then
            echo "Tag ${TAG} stimmt nicht mit Version ${VERSION} aus pyproject.toml Ã¼berein." >&2
            exit 1
          fi

      - name: Build sdist and wheel
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}


