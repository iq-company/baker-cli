name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Verify tag matches project version
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF_NAME}"
          VERSION=$(python - <<'PY'
import tomllib
with open('pyproject.toml','rb') as f:
    data = tomllib.load(f)
print(data['project']['version'])
PY
)
          if [ "${TAG#v}" != "$VERSION" ]; then
            echo "Tag ${TAG} stimmt nicht mit Version ${VERSION} aus pyproject.toml Ã¼berein." >&2
            exit 1
          fi

      - name: Build sdist and wheel
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}


