name: Tag on version change

on:
  push:
    branches: [ main ]
    paths:
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Create and push tag when version changed
        run: |
          set -euo pipefail
          CURRENT_VERSION=$(python -c "import tomllib; f=open('pyproject.toml','rb'); print(tomllib.load(f)['project']['version'])")
          PREV_FILE=$(git rev-parse HEAD^ >/dev/null 2>&1 && git show HEAD^:pyproject.toml || true)
          if [ -n "$PREV_FILE" ]; then
            PREV_VERSION=$(printf "%s" "$PREV_FILE" | python -c "import sys, tomllib; print(tomllib.loads(sys.stdin.buffer.read())['project']['version'])")
          else
            PREV_VERSION=""
          fi
          if [ "$PREV_VERSION" = "$CURRENT_VERSION" ]; then
            echo "Version unver√§ndert ($CURRENT_VERSION). Kein Tag wird erstellt."
            exit 0
          fi
          TAG="v${CURRENT_VERSION}"
          if git ls-remote --tags origin "refs/tags/$TAG" | grep -q "$TAG"; then
            echo "Tag $TAG existiert bereits remote. Nichts zu tun."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"
